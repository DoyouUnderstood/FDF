// draw_line(map, line);
			// line = init_line2(map, line, x, y + 1);
			// draw_line(map, line);
            // void	draw_line(t_map *map, t_line *line)
// {
// 	while (line->x0 <= line->x1)
// 	{
// 		if (line->steep)
// 		{
// 			my_mlx_pixel_put(map->mlx, line->y0, line->x0, map->color);
// 			line->error -= abs(line->dy);
// 			if (line->error < 0)
// 			{
// 				line->y0 += line->ystep;
// 				line->error += abs(line->dx);
// 			}
// 		}
// 		else
// 		{
// 			my_mlx_pixel_put(map->mlx, line->x0, line->y0, map->color);
// 			line->error -= abs(line->dx);
// 			if (line->error < 0)
// 			{
// 				line->y0 += line->ystep;
// 				line->error += abs(line->dy);
// 			}
// 		}
// 		line->x0 += line->xstep;
// 	}
// }

// int mv_alpha(int keycode, void *param)
// {
//     t_map *params = (t_map *)param;

//     if (keycode == KEY_C) {
//         params->alpha += ANGLE_INCREMENT; // Augmente l'angle
//         if (params->alpha > 2 * PI) // Si l'angle dépasse 360 degrés,
// le ramener à 0
//             params->alpha -= 2 * PI;
//     }

//     // Mettez à jour la vue ou le rendu ici

//     return (0);
// }


t_line	*init_line2(t_map *map, t_line *line, int x, int y)
{
	line->x0 = map->coord[y][x].x;
	line->y0 = map->coord[y][x].y;
	line->x1 = map->coord[y][x + 1].x;
	line->y1 = map->coord[y][x + 1].y;
	line->x = x;
	line->y = y;
	if (abs(line->dy) > abs(line->dx))
		line->steep = 1;
	else
		line->steep = 0;
	if (line->steep) 
	{
		if (line->y0 > line->y1) 
		{
			ft_swap(&line->x0, &line->x1);
			ft_swap(&line->y0, &line->y1);
    	}
	} else
	{
			if (line->x0 > line->x1) 
			{
				ft_swap(&line->x0, &line->x1);
				ft_swap(&line->y0, &line->y1);
			}
	}
	line->dx = abs(line->x1 - line->x0);
	line->dy = abs(line->y1 - line->y0);
	line->error = line->steep ? abs(line->dx) : abs(line->dy);
	line->ystep = (line->y0 < line->y1) ? 1 : -1;
	line->xstep = (line->x0 < line->x1) ? 1 : -1;
	return (line);
}